#!/bin/sh

# If not running interactively, don't do anything
case $- in
  *i*) : ;;
  *) return ;;
esac


SHELL_NAME=$(ps -o command= -p $$)
SHELL_NAME=${SHELL_NAME##*/}
SHELL_NAME=${SHELL_NAME%% *}
export SHELL_NAME=${SHELL_NAME#-}


if [ ! -z "$KSH_VERSION$BASH_VERSION$ZSH_VERSION" ]; then
  . ${HOME}/.color.sh
fi

if [ -z "$ZSH_VERSION" ]; then
  set -o emacs
fi

if [ -z "$SSH_CLIENT" ]; then
    COLOR_HOST="${COLOR_GREEN_BOLD}"
    COLOR_NUMBER_HOST="${COLOR_NUMBER_GREEN}"
else
    COLOR_HOST="${COLOR_ORANGE_BOLD}"
    COLOR_NUMBER_HOST="${COLOR_NUMBER_ORANGE}"
fi

if [ "$UID" -ne 0 ]; then
    COLOR_NUMBER_USER="${COLOR_NUMBER_GREEN}"
else
    COLOR_NUMBER_USER="${COLOR_NUMBER_RED}"
fi


if (file -p /dev/null 2>/dev/null >/dev/null); then
  alias file="file -p"
fi

alias now="date +%Y%m%d%H%M"
#alias git=hub

alias sshpw="ssh -o PubkeyAuthentication=no"

alias ttl="time texfot lualatex -synctex=1"
alias bbl="time biber --isbn-normalise"



# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(lesspipe)"


#alias mc='TERM=xterm-color mc'
#alias gsf='git svn fetch; date'
alias danke="echo 'BitteschÃ¶n'"
alias bitte="echo 'Na bitte.'"

alias rot13="tr a-zA-Z n-za-mN-ZA-M"

[ "x$TERM" != "xdump" ] && case "$OSTYPE" in
  linux*)
    [ -x /usr/bin/dircolors ] && eval "`dircolors -b`"
    alias ls='ls --color=auto'
    alias dir='ls --color=auto --format=vertical'
    alias vdir='ls --color=auto --format=long'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
    ;;
  darwin*)
    alias ls='ls -G'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
    ;;
esac


# some more ls aliases
alias ll='ls -lA'
alias la='ls -A'
alias l='ls -CF'
alias vi='vim'


mping() {
    ping $1 | awk -F\[=\ \] '/me=/{t=$(NF-1);f=3000-14*log(t^20);c="play -q -n synth 1 pl " f;print $0;system(c)}';
}

[ -f "${HOME}/.shrc.local" ] && . "${HOME}/.shrc.local"

for gimmick in archey neofetch screenfetch; do
  if command -v $gimmick 2>&1 >/dev/null; then
    echo ""
    $gimmick
    break
  fi
done


#EOF
